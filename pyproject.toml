[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[project]
name = "nix-base32"
dynamic = ["version"]
description = "Pure Python implementation of nix variant of base32"
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
authors = [
    { name = "Peter A.", email = "ink.splatters@pm.me" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[dependency-groups]
dev = [
    "poethepoet>=0.36.0",
    "pytest>=8.4.1",
    "pytest-cov>=5.0.0",
    "ruff>=0.12.4",
    "ty>=0.0.1a21",
]

[project.optional-dependencies]
cli = [
    "click>=8.3.0"
]

[project.scripts]
base32 = "base32.cli:base32"

[tool.hatch.build.targets.wheel]
packages = ["src/base32"]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"

[tool.hatch.build.hooks.version]
path = "src/base32/_version.py"
template = '''
"""Version metadata for :pypi:`nix-base32`.

This module is autogenerated at build time by
:mod:`uv-dynamic-versioning` to synchronize with your VCS tags.
"""

__version__ = "{version}"
'''

[tool.poe.tasks]
typecheck = "ty"
lint = ["ruff:check", "typecheck"]
fix = ["ruff:format", "ruff:fix"]
test = "pytest -q"

[tool.poe.tasks."ruff:format"]
cmd = "ruff format"

[tool.poe.tasks."ruff:check"]
cmd = "ruff check"

[tool.poe.tasks."ruff:fix"]
cmd = "ruff check --fix"

[tool.poe]
executor = { type = "uv" }

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-v",
    "--cov=base32",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=xml",
]
